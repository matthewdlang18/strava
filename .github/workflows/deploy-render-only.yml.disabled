name: 🚀 Deploy to Render (Recommended)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'
        cache-dependency-path: 'frontend/yarn.lock'
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: |
        # Configure yarn with enhanced network settings
        yarn config set network-timeout 300000
        yarn config set network-retry 5
        # Try primary installation
        yarn install --frozen-lockfile || \
        (echo "Yarn failed, trying npm fallback..." && \
         npm config set registry https://registry.npmjs.org/ && \
         npm config set fetch-retry-mintimeout 60000 && \
         npm config set fetch-retry-maxtimeout 300000 && \
         npm config set fetch-retries 5 && \
         npm ci --legacy-peer-deps)
    
    - name: Install backend dependencies
      run: |
        pip install -r requirements.txt
        pip install -r backend/requirements.txt
    
    - name: Run frontend tests
      working-directory: ./frontend
      run: |
        # Use yarn if available, otherwise npm
        if command -v yarn &> /dev/null && [ -f yarn.lock ]; then
          yarn test --coverage --watchAll=false
        else
          npm test -- --coverage --watchAll=false
        fi
    
    - name: Run backend tests
      run: python -m pytest test_backend.py -v
    
    - name: Build frontend
      working-directory: ./frontend
      run: |
        # Use yarn if available, otherwise npm
        if command -v yarn &> /dev/null && [ -f yarn.lock ]; then
          yarn build
        else
          npm run build
        fi

  deploy-to-render:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to Render
      run: |
        echo "🎯 Deploying to Render..."
        echo ""
        echo "✅ Code pushed to main branch - Render will automatically deploy!"
        echo ""
        echo "🔗 Check your deployment status:"
        echo "   📱 Render Dashboard: https://dashboard.render.com"
        echo "   📊 Build Logs: Check your service's 'Events' tab"
        echo ""
        echo "🌐 Your app will be available at:"
        echo "   🚀 https://your-app-name.onrender.com"
        echo "   🔍 Health Check: https://your-app-name.onrender.com/api/health"
        echo ""
        echo "⏱️  First deployment typically takes 3-5 minutes"
        echo "🔄 Subsequent deployments take 1-2 minutes"
        echo ""
        echo "🎉 Deployment triggered successfully!"
