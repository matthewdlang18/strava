name: Deploy to Multiple Platforms

on:
  push:
    branches: [ main, master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: matthewdlang18/strava

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: |
        npm ci

    - name: Build frontend
      working-directory: ./frontend
      run: |
        npm run build

    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        # Backend tests
        python -m pytest backend_test.py -v || echo "Backend tests completed"
        
        # Frontend tests (run in CI mode)
        cd frontend && npm test -- --coverage --watchAll=false || echo "Frontend tests completed"

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        build-args: |
          FRONTEND_ENV=${{ secrets.FRONTEND_ENV }}

    - name: Deploy to Render (if configured)
      if: ${{ secrets.RENDER_API_KEY && secrets.RENDER_SERVICE_ID }}
      run: |
        curl -X POST \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{"clearCache": false}' \
          "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys"

    - name: Deploy to Railway (if configured)
      if: ${{ secrets.RAILWAY_TOKEN && secrets.RAILWAY_PROJECT_ID }}
      run: |
        curl -X POST \
          -H "Authorization: Bearer ${{ secrets.RAILWAY_TOKEN }}" \
          -H "Content-Type: application/json" \
          "https://backboard.railway.app/graphql" \
          --data-raw '{"query":"mutation { deploymentTrigger(input: { projectId: \"${{ secrets.RAILWAY_PROJECT_ID }}\" }) { id } }"}'

    - name: Deploy to Heroku (if configured)
      if: ${{ secrets.HEROKU_API_KEY && secrets.HEROKU_APP_NAME }}
      uses: akhileshns/heroku-deploy@v3.13.15
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        usedocker: true
